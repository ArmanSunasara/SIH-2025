/* Loading Components Styles */
.loading-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 200px;
    padding: 2rem;
}

.loading-spinner {
    text-align: center;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #007bff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

.loading-spinner p {
    color: #666;
    font-size: 0.9rem;
    margin: 0;
}

/* Error Boundary Styles */
.error-container {
    padding: 2rem;
    text-align: center;
    background-color: #fee;
    border: 1px solid #fcc;
    border-radius: 8px;
    margin: 1rem;
}

.error-container h2 {
    color: #c33;
    margin-bottom: 1rem;
}

.error-container details {
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 0.5rem;
    margin: 1rem 0;
    text-align: left;
}

.error-container summary {
    cursor: pointer;
    font-weight: bold;
    padding: 0.5rem;
}

.error-container button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    margin-top: 1rem;
}

.error-container button:hover {
    background-color: #0056b3;
}

/* Performance optimization styles */
.lazy-image {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

.lazy-image.loaded {
    opacity: 1;
}

/* Virtual scroll container */
.virtual-scroll-container {
    overflow-y: auto;
    position: relative;
}

.virtual-scroll-item {
    position: absolute;
    width: 100%;
    left: 0;
}

/* Progressive enhancement */
@media (prefers-reduced-motion: reduce) {
    .spinner {
        animation: none;
    }

    .lazy-image {
        transition: none;
    }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .spinner {
        border-color: ButtonText;
        border-top-color: SelectedItem;
    }

    .error-container {
        background-color: Canvas;
        border-color: ButtonText;
        color: CanvasText;
    }
}